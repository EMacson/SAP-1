$date
	Fri Aug 22 19:06:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_adder_subtracter $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " c_out $end
$var reg 1 # SUB $end
$var reg 8 $ a [7:0] $end
$var reg 8 % b [7:0] $end
$scope module uut $end
$var wire 1 # SUB $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 8 ( s [7:0] $end
$var wire 1 " carry $end
$var wire 1 ) c1 $end
$scope module as0 $end
$var wire 1 # SUB $end
$var wire 4 * a [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 4 , s [3:0] $end
$var wire 1 ) carry $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module fa0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 # c_in $end
$var wire 1 / c_out $end
$var wire 1 2 sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 / c_in $end
$var wire 1 . c_out $end
$var wire 1 5 sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 . c_in $end
$var wire 1 - c_out $end
$var wire 1 8 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 - c_in $end
$var wire 1 ) c_out $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope module as1 $end
$var wire 1 ) SUB $end
$var wire 4 < a [3:0] $end
$var wire 4 = b [3:0] $end
$var wire 4 > s [3:0] $end
$var wire 1 " carry $end
$var wire 1 ? c3 $end
$var wire 1 @ c2 $end
$var wire 1 A c1 $end
$scope module fa0 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 ) c_in $end
$var wire 1 A c_out $end
$var wire 1 D sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 A c_in $end
$var wire 1 @ c_out $end
$var wire 1 G sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 @ c_in $end
$var wire 1 ? c_out $end
$var wire 1 J sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 ? c_in $end
$var wire 1 " c_out $end
$var wire 1 M sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
b0 >
b0 =
b0 <
0;
0:
09
08
07
06
15
14
03
12
01
10
0/
0.
0-
b11 ,
b10 +
b1 *
0)
b11 (
b10 '
b1 &
b10 %
b1 $
0#
0"
b11 !
$end
#10000
1"
1?
1@
1A
0G
0J
0M
1C
1F
1I
1L
b0 >
0D
1)
1-
1.
08
0;
1/
13
01
14
17
1:
b10 !
b10 (
b10 ,
02
b1 +
b11 *
1#
b1 %
b1 '
b11 $
b11 &
#20000
05
18
0-
0/
12
b101 ,
0;
b10000101 !
b10000101 (
b1000 >
1M
07
00
19
1K
b101 +
b1010 *
b1000 <
b101 %
b101 '
b10001010 $
b10001010 &
#30000
